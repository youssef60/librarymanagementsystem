/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Views;

import Controllers.ReservationController;
import Dao.UsersDAO;
import Models.Users;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Month;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author MHD
 */
public class GestionReservation extends javax.swing.JInternalFrame {
    DefaultComboBoxModel  cmb;
    UsersDAO userDao = new UsersDAO();
    ReservationController reservationController = new ReservationController();
    /**
     * Creates new form GestionReservation
     */
    public GestionReservation() throws SQLException {
        initComponents();
        initTable();
        initSearchCombo();
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        barCodeTxt = new javax.swing.JTextField();
        empruntRButton = new javax.swing.JRadioButton();
        locationRButton = new javax.swing.JRadioButton();
        confirmerButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplay = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        searchCombo = new javax.swing.JComboBox<>();
        searchTxt = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        supprimerButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        prixTxt = new javax.swing.JTextField();
        cinTxt = new javax.swing.JTextField();
        retournerButton = new javax.swing.JButton();
        dateDebutTxt = new com.toedter.calendar.JDateChooser();
        dateFinTxt = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Exemplaire Bar Code      :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Type                              :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Date Debut                   :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Date Fin                        :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Client Cin                      :");

        barCodeTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                barCodeTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                barCodeTxtFocusLost(evt);
            }
        });
        barCodeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                barCodeTxtKeyReleased(evt);
            }
        });

        buttonGroup1.add(empruntRButton);
        empruntRButton.setText("Emprunt");

        buttonGroup1.add(locationRButton);
        locationRButton.setText("Location");

        confirmerButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        confirmerButton.setText("Confirmer");
        confirmerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmerButtonActionPerformed(evt);
            }
        });

        tblDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "idReservation", "Code Bar ", "Date Debut", "Date Fin", "Nom Client", "Cin Client", "Type", "prix", "Rendu"
            }
        ));
        jScrollPane1.setViewportView(tblDisplay);

        jLabel6.setText("Chercher par :");

        searchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "idReservation", "codeBar", "dateDebut", "dateFin", "nom", "cin", "type", "prix", "rendu" }));

        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        clearButton.setText("clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        supprimerButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        supprimerButton.setText("supprimer");
        supprimerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Gestion Reservation");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("prix");

        prixTxt.setEnabled(false);

        cinTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cinTxtFocusGained(evt);
            }
        });

        retournerButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        retournerButton.setText("retourner");
        retournerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retournerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(barCodeTxt)
                            .addComponent(prixTxt)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(empruntRButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(locationRButton)
                                .addGap(36, 36, 36))
                            .addComponent(cinTxt)
                            .addComponent(dateDebutTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateFinTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(33, 33, 33)
                                .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(confirmerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(clearButton)
                                .addGap(51, 51, 51)
                                .addComponent(supprimerButton)
                                .addGap(34, 34, 34)
                                .addComponent(retournerButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel7)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(barCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(empruntRButton)
                                    .addComponent(locationRButton))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateDebutTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(prixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dateFinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmerButton)
                    .addComponent(clearButton)
                    .addComponent(supprimerButton)
                    .addComponent(retournerButton))
                .addContainerGap(196, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void initTable()  {
           try{
               ResultSet rs = reservationController.getDao().getRsAll();
               reservationController.getModel().setResultSet(rs);
           }catch(SQLException e){
             
            }
           tblDisplay.setModel(reservationController.getModel()); 

   }

   public double calculPrix(){
               long days = Duration.between(dateDebutTxt.getCalendar().toInstant(), dateFinTxt.getCalendar().toInstant()).toDays();
             
               double prix = 0; 
               if(empruntRButton.isSelected()){
                       if(days > 21){
                           prix = (Math.ceil(  ( (double) days/21)) * 20);
                       }else{
                          prix = 20;
                       }             
                }else if(locationRButton.isSelected()){
                      if(days > 7){
                           prix = (Math.ceil(  ( (double) days/7)) * 10);
                       }else{
                          prix = 20;
                       } 
                } 
               return prix;
         
   }

   public void initSearchCombo(){
              cmb = new DefaultComboBoxModel();
              try 
                { 
                  reservationController.getModel().setResultSet(reservationController.getDao().getRsAll());

                  for(int i=0; i < reservationController.getModel().getColumnCount();i++){
                      cmb.addElement(reservationController.getModel().getColumnName(i));
                  } 
                  searchCombo.setModel(cmb);
              
                }catch(SQLException e){ JOptionPane.showMessageDialog(rootPane, e); } 

   }
    public boolean getCodeBarValidation() throws SQLException{

    if(reservationController.getValidation().isEmpty(barCodeTxt.getText().trim())){
                JOptionPane.showMessageDialog(rootPane, "svp enter the barcode");
                barCodeTxt.requestFocus();
     
                return false;
    }else if(!reservationController.getValidation().isExist(barCodeTxt.getText().trim(), "exemplaire" , "codeBar")){
                JOptionPane.showMessageDialog(rootPane, "this code bar doesn't exist");
                barCodeTxt.requestFocus();    
                return false;
    }else if(reservationController.getDao().getTypeExemplaire(barCodeTxt.getText()).equals("livreDemander") || reservationController.getDao().getTypeExemplaire(barCodeTxt.getText()).equals("disqueCompact") ){
                empruntRButton.setEnabled(false);
             
    }
    return true;
   }

    
    public boolean getRecordValidation() throws SQLException{ 
           if(reservationController.getValidation().isEmpty(cinTxt.getText().trim())){
                JOptionPane.showMessageDialog(rootPane, "plz enter the cin");
                cinTxt.requestFocus();
     
                return false;
          }else if(!reservationController.getValidation().isExist(cinTxt.getText().trim(), "users" , "cin")){
                JOptionPane.showMessageDialog(rootPane, "this cin doesn't exist");
                cinTxt.requestFocus();
     
                return false;


          }else if(reservationController.getValidation().isEmpty(dateDebutTxt.getDate().toString())){
                JOptionPane.showMessageDialog(rootPane, "plz enter the date debut ");
                dateDebutTxt.requestFocus();
                return false; 
          }else if(reservationController.getValidation().isEmpty(dateFinTxt.getDate().toString())){
                JOptionPane.showMessageDialog(rootPane, "plz enter date fin ");
                dateFinTxt.requestFocus();
                return false;
          }

          int nbrRes = reservationController.getDao().getNbreReservationEncours(cinTxt.getText());
          if(nbrRes>=5){
               JOptionPane.showMessageDialog(rootPane, "vous avez 5 reservations en cours , reservation annulé ");  
                return false;
          }
          int nbrPenalite = reservationController.getDao().getNbreReservationEncours(cinTxt.getText());
               if(nbrPenalite>0){
                    JOptionPane.showMessageDialog(rootPane, "vous avez pas regler votre penalite , reservation annulé ");
                    return false; 
                }
               return true;
}

    private void confirmerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmerButtonActionPerformed
        
      try{ 
            if(getRecordValidation()){
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
             String dateDebut = sdf.format(dateDebutTxt.getDate());
             String dateFin = sdf.format(dateFinTxt.getDate());
    
            int idUser = reservationController.getDao().getUserIdFromCin(cinTxt.getText().trim());
            int idExemplaire = reservationController.getDao().getIdExemplaireFromCodeBar(barCodeTxt.getText().trim());
            reservationController.getReservation().setIdExemplaire(idExemplaire);
            reservationController.getReservation().setIdUser(idUser);   
            String type = "";
            if(empruntRButton.isSelected())
                 type = "emprunt";
            else if(locationRButton.isSelected())
                 type = "location";
            reservationController.getReservation().setTypeRes(type);
            reservationController.getReservation().setDateDebutRes(dateDebut);
            reservationController.getReservation().setDateFinRes(dateFin);
            reservationController.getReservation().setPrixApaye(Float.parseFloat(prixTxt.getText()));
          
           reservationController.getDao().insert(reservationController.getReservation());
            JOptionPane.showMessageDialog(rootPane, "reservation saved succefully");
            initTable();                
        }
      
        }catch(SQLException e) 
        { JOptionPane.showMessageDialog(rootPane, e); }


    }//GEN-LAST:event_confirmerButtonActionPerformed

    private void dateFinTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFinTxtKeyReleased
                   // TODO add your handling code here:
    }//GEN-LAST:event_dateFinTxtKeyReleased

    private void dateFinTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFinTxtFocusLost

    }//GEN-LAST:event_dateFinTxtFocusLost

    private void cinTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cinTxtFocusGained
          double prix = calculPrix();
          prixTxt.setText(String.valueOf(prix));
    }//GEN-LAST:event_cinTxtFocusGained

    

    private void barCodeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barCodeTxtKeyReleased
       
    }//GEN-LAST:event_barCodeTxtKeyReleased

    private void barCodeTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barCodeTxtFocusLost
          try{
                    if(!barCodeTxt.getText().equals("")){
                       getCodeBarValidation();
                    }
              }catch(Exception e)
              { JOptionPane.showMessageDialog(rootPane, e); }        // TODO add your handling code here:
    }//GEN-LAST:event_barCodeTxtFocusLost

    private void barCodeTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barCodeTxtFocusGained
           empruntRButton.setEnabled(true)   ;     // TODO add your handling code here:
    }//GEN-LAST:event_barCodeTxtFocusGained

    

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased
        String word = searchTxt.getText();
        String colName = searchCombo.getSelectedItem().toString();
        ResultSet rs = null;
        try {
            rs = reservationController.getDao().search(colName, word);
        } catch (SQLException ex) {
            Logger.getLogger(GestionReservation.class.getName()).log(Level.SEVERE, null, ex);
        }
                   reservationController.getModel().setResultSet(rs);
                   tblDisplay.setModel(reservationController.getModel()); 
   
    }//GEN-LAST:event_searchTxtKeyReleased

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
         clearData();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void supprimerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerButtonActionPerformed
        int i = tblDisplay.getSelectedRow();
        int idRes = Integer.valueOf(reservationController.getModel().getValueAt(i, 0).toString());
        reservationController.getReservation().setIdRes(idRes);
        try{
            if(JOptionPane.showConfirmDialog(rootPane, "are you sure you wanna delete this") == 0) 
            reservationController.getDao().delete(reservationController.getReservation());
            initTable();
        }catch(SQLException e){
          JOptionPane.showMessageDialog(rootPane, e);
        }
         
        clearData();
   
    }//GEN-LAST:event_supprimerButtonActionPerformed
    public void gestionAmende(int idRes){
          try{
                 int amende = 0;
                 int idUser = reservationController.getDao().getUserIdFromIdRes(idRes);
                 int days = reservationController.getDao().daysNoTPayed(idRes);
                 String type = reservationController.getDao().getType(idRes);
                  
                 if(type.equals("emprunt") == true ){
                    amende = days * 5;
                   // System.out.println(amende);
                 }else if(type.equals("location")){
                     amende = days * 10;
                    // System.out.println(amende);
                 }       
                 JOptionPane.showMessageDialog(rootPane, "vous avez une amende de " + amende + " dh a cause du retard" );
                 reservationController.getDao().insertPenalite( amende,  idUser, idRes);
          }catch(SQLException e){ JOptionPane.showMessageDialog(rootPane, e); }
   
    }


    private void retournerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retournerButtonActionPerformed
        int i =  (int) tblDisplay.getSelectedRow();
        int idRes = Integer.parseInt(reservationController.getModel().getValueAt(i, 0).toString());
      
             
            gestionAmende(idRes);
             
        
          initTable();
    }//GEN-LAST:event_retournerButtonActionPerformed

    public void clearData(){
        barCodeTxt.setText("");
        empruntRButton.setSelected(false);
        locationRButton.setSelected(false);
        cinTxt.setText("");
        prixTxt.setText("");
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barCodeTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cinTxt;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton confirmerButton;
    private com.toedter.calendar.JDateChooser dateDebutTxt;
    private com.toedter.calendar.JDateChooser dateFinTxt;
    private javax.swing.JRadioButton empruntRButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton locationRButton;
    private javax.swing.JTextField prixTxt;
    private javax.swing.JButton retournerButton;
    private javax.swing.JComboBox<String> searchCombo;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JButton supprimerButton;
    private javax.swing.JTable tblDisplay;
    // End of variables declaration//GEN-END:variables
}
